{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww30040\viewh16060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Note: To Apply Binary Search the array has to be sorted in ascending or descending order.\
// Time Complexity is logN\
\
class binarySearchClass \{\
    public static void main(String[] args) \{\
        int arr[]=\{-8,-6,-2,0,2,4,5,8,23,34,45,54\};\
        int target=45;\
        int ans=BinarySearch(arr,target);\
        System.out.println(ans);\
        \
    \}\
    \
    static int BinarySearch(int arr[],int target)\{\
        int start=0;\
        int end=arr.length-1;\
        //int mid= (start+end)/2;  Might Possible that (start+end) will exceed the limit of Integer so please use below alternative\
        \
        \
        while(start<=end)\{\
            int mid=start + (end-start) / 2;\
            if(target>arr[mid])\{\
                start=mid+1;\
            \}\
            else if(target<arr[mid])\{\
                end=mid-1;\
            \}\
            else\{\
                //Answer Found\
                return mid;\
            \}\
        \}\
        return -1;\
    \}\
\}}